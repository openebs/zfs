stages:
  - build
  - baseline

before_script:
  - echo $HOME
  - export BRANCH=${CI_COMMIT_REF_NAME}
  - echo $BRANCH
  - export COMMIT=${CI_COMMIT_SHA:0:8}
  - echo $FIO_SRCDIR
  - apt-get update
  - apt-get install --yes sudo git-core
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install --yes -qq gcc-6 g++-6
  - sudo apt-get install --yes -qq build-essential autoconf libtool gawk alien fakeroot linux-headers-$(uname -r) libaio-dev
  - sudo apt-get install --yes -qq zlib1g-dev uuid-dev libattr1-dev libblkid-dev libselinux-dev libudev-dev libssl-dev libjson-c-dev
  - sudo apt-get install --yes -qq lcov libjemalloc-dev libelf-dev net-tools bc kmod linux-modules-4.15.0-1025-gcp
  # packages for tests
  - sudo apt-get install --yes -qq parted lsscsi ksh attr acl nfs-kernel-server fio
  - sudo apt-get install --yes -qq libgtest-dev cmake
  # packages for debugging
  - sudo apt-get install --yes gdb
  # use gcc-6 by default
  - sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-6 /usr/bin/gcc
  - sudo unlink /usr/bin/g++ && sudo ln -s /usr/bin/g++-6 /usr/bin/g++
  - echo "CSTOR"
  - echo $COMMIT
  - pushd .
  - cd /usr/src/gtest
  - sudo cmake CMakeLists.txt
  - sudo make -j4
  - sudo cp *.a /usr/lib
  - popd
  - cd ..
  # we need fio repo to build zfs replica fio engine
  - git clone https://github.com/axboe/fio
  - cd fio
  - git checkout fio-3.7
  - ./configure
  - sudo make -j4
  - cd ..
  - git clone https://github.com/openebs/spl
  - cd spl
  - git checkout spl-0.7.9
  - sudo sh autogen.sh
  - ./configure

build-zfs-0:
   stage: build
   script: 
    - make -j4
    - cd ../zfs
    - sh autogen.sh
    - echo $PWD
    - ./configure --with-config=user --enable-code-coverage=yes --enable-debug --enable-uzfs=yes --with-jemalloc --with-fio=$PWD/../fio
    - make -j4
    - make cstyle
    - export FIO_SRCDIR=$PWD/../fio
    - echo $FIO_SRCDIR
    - sudo bash ./print_debug_info.sh &
    - bash ./tests/cbtest/script/test_uzfs.sh -T all
    - ./build_image.sh

build-zfs-1:
   stage: build
   script: 
    - make --no-print-directory -s pkg-utils pkg-kmod
    - sudo dpkg -i *.deb
    - cd ../zfs
    - echo $FIO_SRCDIR
    - sh autogen.sh
    - ./configure --enable-code-coverage=yes --enable-debug
    - make --no-print-directory -s pkg-utils pkg-kmod
    - sudo dpkg -i *.deb
    - make cstyle
    - sudo /sbin/modprobe zfs
    - /sbin/ztest

baseline-image:
  stage: baseline
  image: atulabhi/kops:v10
  before_script: []  
  script:
     - pwd
     - apt-get update
     - apt-get install --yes git-core
     - git config --global user.name "OpenEBS CI Bot"
     - git config --global user.email openebscibot@openebs.io
     - export BRANCH=${CI_COMMIT_REF_NAME}
     - echo $BRANCH
     - export COMMIT=${CI_COMMIT_SHA:0:8}
     - echo $COMMIT
     - git clone https://github.com/$REPO/e2e-infrastructure.git
     - cd e2e-infrastructure/baseline
     - ansible-playbook commit-writer.yml --extra-vars "branch=$BRANCH repo=$CI_PROJECT_NAME commit=$COMMIT"
     - git status
     - git add baseline
     - git status
     - git commit -m "updated $CI_PROJECT_NAME commit:$COMMIT"
     - git push  https://$user:$pass@github.com/$REPO/e2e-infrastructure.git --all
     - curl -X POST -F token=$MAWS -F ref=infra-chaos https://gitlab.openebs.ci/api/v4/projects/20/trigger/pipeline
     - curl -X POST -F token=$MGCP -F ref=master https://gitlab.openebs.ci/api/v4/projects/21/trigger/pipeline
     - curl -X POST -F token=$MAZURE -F ref=master https://gitlab.openebs.ci/api/v4/projects/25/trigger/pipeline
     - curl -X POST -F token=$MPACKET -F ref=master https://gitlab.openebs.ci/api/v4/projects/23/trigger/pipeline
     - curl -X POST -F token=$MEKS -F ref=master https://gitlab.openebs.ci/api/v4/projects/19/trigger/pipeline
     - curl -X POST -F token=$MGKE -F ref=master https://gitlab.openebs.ci/api/v4/projects/22/trigger/pipeline 

